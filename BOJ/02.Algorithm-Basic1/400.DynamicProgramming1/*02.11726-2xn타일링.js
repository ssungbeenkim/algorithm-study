/* 
2*n 의 타일을 채울 수 있는 경우의 수를 수한다. 
2*2 정사각형은 가로 또는 세로로 들어갈 수 있으니 2가지 경우의 수. 
n이 홀수인 경우에 세로 사각형의 위치에 따라서 경우의 수가 증가하므로 
정사각형의 개수 s라고 할 때 2^s * (s + 1) 일 것이라고 생각했다. 
그러나 이 방법을 검증해볼 때 9의 경우 예제 출력인 55와 다른 80으로 계산이 된다....

3의 경우를 생각해 보니 =| ||| ||| |= 이렇게 계산이 되어 중복되는 경우가 생긴다. 
그래서 2^1 * 2 에서 1을 빼 주어야 맞는 경우의 수가 된다. 

이를 적용시켜 볼 때, 세로로 들어온 경우에는 꼭 겹치는 경우가 생긴다.
||| = = 와 =|||=등과 같이 겹치는 경우를 빼주어야 하는데... 

조합의 개념이 필요할 것 같다. 
세로 사각형만큼 빼준다.
4개일때, 3개일때, 2개일때, 1개일때..
nPr을 4부터 1까지 한것이 된다. 
...
라고 생각했으나 계산해보면 답이 안나옴
찾아보자. 
...
https://yabmoons.tistory.com/506 
DP로 풀어야 하는 문제이구나. 
실제로 경우의 수를 세어 나가다보면 규칙이 발견이 된다. 

하지만 모든 n에 대하여 이 규칙이 적용된다고 어떻게 확신할 수 있을까를 생각하다가 
아래의 블로그를 보고 조금 납득하게 되었다. 
https://kosaf04pyh.tistory.com/222
결과식으로 피보나치 수열의 점화식과 비슷하다.
*/

const n = Number(`2`.trim());
const dp = Array(n + 1).fill(0);
dp[1] = 1;
dp[2] = 2;

for (i = 3; i < n + 1; i++) {
  dp[i] = (dp[i - 1] + dp[i - 2]) % 10007;
}
console.log(dp[n]);
